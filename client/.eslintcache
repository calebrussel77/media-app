[{"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\index.tsx":"1","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\App.tsx":"2","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\modals\\RegisterForm.tsx":"3","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\store.ts":"4","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\reducers\\rootReducer.ts":"5","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\reducers\\layoutReducer.ts":"6","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actionTypes\\layoutActionTypes.ts":"7","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\interfaces\\index.ts":"8","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\layout\\Layout.tsx":"9","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\NavBar.tsx":"10","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actions\\layoutActions.ts":"11","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\helper\\index.ts":"12","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actionTypes\\userActionTypes.ts":"13","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actions\\userActions.ts":"14","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\interfaces\\layout.ts":"15","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\modals\\LoginForm.tsx":"16","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\reducers\\userReducer.ts":"17","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\routes\\Routes.tsx":"18","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\routes\\PrivateRoute.tsx":"19","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\layout\\Dashboard.tsx":"20","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\sidenavs\\SideNavLeft.tsx":"21","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\sidenavs\\SideNavRight.tsx":"22","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\post\\Posts.tsx":"23","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\post\\Post.tsx":"24","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\post\\comment\\Comments.tsx":"25","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\post\\comment\\Comment.tsx":"26","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\post\\answer\\Answers.tsx":"27","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\post\\answer\\Answer.tsx":"28","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\modals\\CreatePost.tsx":"29","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\reducers\\profileReducer.ts":"30","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actionTypes\\profileActionTypes.ts":"31","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actions\\profileActions.ts":"32","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\reducers\\postReducer.ts":"33","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actionTypes\\postActionTypes.ts":"34","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actions\\postActions.ts":"35","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\modals\\CreateComment.tsx":"36","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\modals\\CreateAnswer.tsx":"37"},{"size":483,"mtime":1613834219448,"results":"38","hashOfConfig":"39"},{"size":665,"mtime":1616358910548,"results":"40","hashOfConfig":"39"},{"size":10759,"mtime":1609624804606,"results":"41","hashOfConfig":"39"},{"size":310,"mtime":1609576083471,"results":"42","hashOfConfig":"39"},{"size":398,"mtime":1613836925115,"results":"43","hashOfConfig":"39"},{"size":2418,"mtime":1614009184978,"results":"44","hashOfConfig":"39"},{"size":538,"mtime":1614009019579,"results":"45","hashOfConfig":"39"},{"size":94,"mtime":1609453140940,"results":"46","hashOfConfig":"47"},{"size":2054,"mtime":1609695638038,"results":"48","hashOfConfig":"39"},{"size":2381,"mtime":1609696850445,"results":"49","hashOfConfig":"39"},{"size":1427,"mtime":1614009116514,"results":"50","hashOfConfig":"39"},{"size":619,"mtime":1616406968492,"results":"51","hashOfConfig":"39"},{"size":118,"mtime":1615476000777,"results":"52","hashOfConfig":"39"},{"size":1972,"mtime":1616406990522,"results":"53","hashOfConfig":"39"},{"size":453,"mtime":1609576513679,"results":"54","hashOfConfig":"47"},{"size":6757,"mtime":1615450690334,"results":"55","hashOfConfig":"39"},{"size":886,"mtime":1615476043307,"results":"56","hashOfConfig":"39"},{"size":456,"mtime":1616358143727,"results":"57","hashOfConfig":"39"},{"size":466,"mtime":1609625822225,"results":"58","hashOfConfig":"39"},{"size":1832,"mtime":1615475266345,"results":"59","hashOfConfig":"39"},{"size":1079,"mtime":1614003978487,"results":"60","hashOfConfig":"39"},{"size":641,"mtime":1613426588165,"results":"61","hashOfConfig":"39"},{"size":790,"mtime":1614008583794,"results":"62","hashOfConfig":"39"},{"size":6044,"mtime":1616407782834,"results":"63","hashOfConfig":"39"},{"size":460,"mtime":1614009306996,"results":"64","hashOfConfig":"39"},{"size":6168,"mtime":1615475379004,"results":"65","hashOfConfig":"39"},{"size":475,"mtime":1614008724001,"results":"66","hashOfConfig":"39"},{"size":4720,"mtime":1615475406062,"results":"67","hashOfConfig":"39"},{"size":2436,"mtime":1616410635099,"results":"68","hashOfConfig":"39"},{"size":1103,"mtime":1613730836697,"results":"69","hashOfConfig":"39"},{"size":336,"mtime":1613727558080,"results":"70","hashOfConfig":"39"},{"size":3479,"mtime":1616407025156,"results":"71","hashOfConfig":"39"},{"size":5924,"mtime":1614182953095,"results":"72","hashOfConfig":"39"},{"size":1017,"mtime":1614007164541,"results":"73","hashOfConfig":"39"},{"size":11029,"mtime":1616407121140,"results":"74","hashOfConfig":"39"},{"size":2398,"mtime":1615475303211,"results":"75","hashOfConfig":"39"},{"size":2415,"mtime":1615475314882,"results":"76","hashOfConfig":"39"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"j3aqje",{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"79"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"1v29g66",{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"79"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"79"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"79"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\index.tsx",[],["158","159"],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\App.tsx",["160"],"import React, {useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { verifyUser } from './actions/userActions';\nimport NavBar from './components/NavBar';\nimport Routes from './components/routes/Routes';\nimport {ToastContainer} from 'react-toastify'\nimport { State } from './interfaces';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const {user} = useSelector((state: State) => state.user)\n\n  useEffect(() => {\n    dispatch(verifyUser(user.id));\n  }, [])\n\n  return (\n    <React.Fragment>\n      <NavBar/>\n\n      <Routes/>\n\n      <ToastContainer position=\"bottom-right\" />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\modals\\RegisterForm.tsx",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\store.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\reducers\\rootReducer.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\reducers\\layoutReducer.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actionTypes\\layoutActionTypes.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\interfaces\\index.ts",[],["161","162"],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\layout\\Layout.tsx",["163"],"import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport RegisterForm from \"../modals/RegisterForm\";\r\nimport {State} from '../../interfaces'\r\nimport LoginForm from '../modals/LoginForm';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AuthenticateUser = () => {\r\n    const {formType} = useSelector((state:State) => state.layout);\r\n    const {isAuthenticated} = useSelector((state:State) => state.user);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated){\r\n            history.push(\"/dashboard\");\r\n        }\r\n    }, [isAuthenticated])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container d-flex justify-content-center align-items-center layout-container\">\r\n                <div className=\"img-container\">\r\n                    <img src=\"/assets/illustration.svg\" className=\"img-fluid\" alt=\"Illustration\"/>\r\n                </div>\r\n\r\n                <div className=\"layout-text\">\r\n                    <h1>With Socialize you can</h1>\r\n                    <p className=\"d-flex justify-content-start align-items-center p-2 fs-3\">\r\n                        <span className=\"dot\"></span> Meet new people\r\n                    </p>\r\n                    <p className=\"d-flex justify-content-start align-items-center p-2 fs-3\">\r\n                        <span className=\"dot\"></span> Read others posts\r\n                    </p>\r\n                    <p className=\"d-flex justify-content-start align-items-center p-2 fs-3\">\r\n                        <span className=\"dot\"></span> Upload your own posts\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            {formType && formType === \"register\" && <RegisterForm/>}\r\n\r\n            {formType && formType === \"login\" && <LoginForm/>}\r\n\r\n            <footer className=\"container-fluid d-flex justify-content-start align-items-center px-4 fs-5\">\r\n                <p>Socialize &copy; 2021</p>\r\n            </footer>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AuthenticateUser\r\n","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\NavBar.tsx",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actions\\layoutActions.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\helper\\index.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actionTypes\\userActionTypes.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actions\\userActions.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\interfaces\\layout.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\modals\\LoginForm.tsx",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\reducers\\userReducer.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\routes\\Routes.tsx",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\routes\\PrivateRoute.tsx",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\layout\\Dashboard.tsx",["164","165"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFriendRequests, getFriends, getNotifications, getProfile } from '../../actions/profileActions'\r\nimport CreatePost from '../modals/CreatePost'\r\nimport Posts from '../post/Posts'\r\nimport SideNavLeft from '../sidenavs/SideNavLeft'\r\nimport SideNavRight from '../sidenavs/SideNavRight'\r\nimport {State} from '../../interfaces'\r\nimport { fetchPosts, getAllLikes } from '../../actions/postActions'\r\nimport CreateComment from '../modals/CreateComment'\r\nimport CreateAnswer from '../modals/CreateAnswer'\r\n\r\nconst Dashboard = () => {\r\n    const {user} = useSelector((state:State) => state.user) \r\n    const {profile} = useSelector((state:State) => state.profile)\r\n    const {showModal, modalType} = useSelector((state:State) => state.layout) \r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfile(user.id));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(profile.id !== 0){\r\n            dispatch(getAllLikes(user.id, profile.id));\r\n            dispatch(fetchPosts(user.id, profile.id));\r\n            dispatch(getFriends(user.id, profile.id));\r\n            dispatch(getFriendRequests(user.id, profile.id));\r\n            dispatch(getNotifications(user.id, profile.id));\r\n        }\r\n    }, [profile, dispatch])\r\n\r\n    return (\r\n        <div className=\"dashboard container\">\r\n            <React.Fragment>\r\n                <SideNavLeft/>\r\n\r\n                <SideNavRight/>\r\n            </React.Fragment>\r\n\r\n            {showModal && modalType === \"post\" && <CreatePost/>}\r\n\r\n            {showModal && modalType === \"comment\" && <CreateComment/>}\r\n\r\n            {showModal && modalType === \"answer\" && <CreateAnswer/>}\r\n\r\n            <Posts/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\sidenavs\\SideNavLeft.tsx",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\sidenavs\\SideNavRight.tsx",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\post\\Posts.tsx",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\post\\Post.tsx",["166"],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\post\\comment\\Comments.tsx",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\post\\comment\\Comment.tsx",["167"],"import React, {useEffect, useState} from 'react'\r\nimport { Comment as CommentObj } from '../../../interfaces/post';\r\nimport Answers from '../answer/Answers'\r\nimport Moment from 'react-moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { State } from '../../../interfaces';\r\nimport { likeComment, removeComment, unlikeComment, updateComment } from '../../../actions/postActions';\r\nimport { openModal, setCommentIndex, setIdToUseInModal, setPostIndex } from '../../../actions/layoutActions';\r\n\r\nconst Comment = (props: {comment: CommentObj, post_index: number, comment_index: number}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {user} = useSelector((state: State) => state.user)\r\n    const {profile} = useSelector((state: State) => state.profile)\r\n    const {commentsLiked, canClickLikeButton} = useSelector((state: State) => state.post)\r\n    const {modalType} = useSelector((state: State) => state.layout)\r\n\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [showAnswers, setShowAnswers] = useState(false);\r\n    const [commentText, setCommentText] = useState(props.comment.comment_text);\r\n    const [edit, setEdit] = useState(false)\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setIsLiked(commentsLiked.findIndex(c => c.comment_id === props.comment.id) !== -1 ? true : false)\r\n    }, [commentsLiked])\r\n\r\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        let comment = {...props.comment};\r\n        comment.comment_text = commentText;\r\n\r\n        dispatch(updateComment(user.id, profile.id, comment, props.post_index));\r\n\r\n        setEdit(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-body comment\">\r\n            {props.comment.profile_id === profile.id && <span className=\"options-button\" onClick={() => setShowOptions(!showOptions)}>\r\n                <i className=\"fas fa-ellipsis-h\"></i>\r\n            </span>}\r\n\r\n            {showOptions && <ul className=\"options shadow card\">\r\n                <li onClick={() => {\r\n                    setEdit(true);\r\n                    setShowOptions(false);\r\n                }}>Edit <i className=\"fas fa-edit\"></i></li>\r\n                <li onClick={() => {\r\n                        dispatch(removeComment(user.id, profile.id, props.comment.id, props.post_index))\r\n                        setShowOptions(false);\r\n                    }\r\n                }>Delete <i className=\"fas fa-trash-alt\"></i></li>\r\n            </ul>}\r\n\r\n            <div className=\"posted-by\">\r\n                <img src=\"/assets/user.png\" className=\"img-fluid\" alt=\"Default User\"/> {props.comment.username} \r\n                <span className=\"time-posted\"><Moment format=\"D MMMM YYYY hh:mm\">{props.comment.created_at}</Moment></span>\r\n            </div>\r\n\r\n            {!edit && <p className=\"card-text\">\r\n                {props.comment.comment_text}\r\n            </p>}\r\n\r\n            {edit && \r\n                <form className=\"clearfix update-form\" onSubmit={onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            rows={4}\r\n                            value={commentText} \r\n                            onChange={e => setCommentText(e.target.value)}\r\n                            required\r\n                        >\r\n                        </textarea>\r\n\r\n                        <div className=\"buttons float-end\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setEdit(false)}>Cancel</button>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            }\r\n\r\n            <div className=\"post-icons\">\r\n                <span>\r\n                    <span \r\n                        style={isLiked ? {color: 'var(--bs-primary)'} : {}} \r\n                        onClick={() => {\r\n                            if(!canClickLikeButton){\r\n                                return;\r\n                            }\r\n\r\n                            if(!isLiked){\r\n                                dispatch(likeComment(user.id, profile.id, props.comment.id, props.post_index));\r\n                                setIsLiked(true);\r\n                            }else{\r\n                                dispatch(unlikeComment(user.id, profile.id, props.comment.id, props.post_index));\r\n                                setIsLiked(false);\r\n                            }\r\n                        }}\r\n                    >\r\n                        <i className=\"fas fa-thumbs-up\"></i> Like\r\n                    </span> \r\n                    <span className=\"badge bg-primary\">{props.comment.likes}</span>\r\n                </span>\r\n\r\n                <span>\r\n                    <span onClick={() => {\r\n                            if(modalType !== \"\"){\r\n                                return;\r\n                            }\r\n\r\n                            dispatch(openModal(\"answer\"))\r\n                            dispatch(setIdToUseInModal(props.comment.id));\r\n                            dispatch(setPostIndex(props.post_index));\r\n                            dispatch(setCommentIndex(props.comment_index))\r\n                        }}>\r\n                        <i className=\"far fa-comments\"></i> Answers\r\n                    </span> \r\n                    <span className=\"badge bg-primary\">{props.comment.answers.length}</span>\r\n                </span>\r\n            </div>\r\n\r\n            {showAnswers && <Answers answers={props.comment.answers} comment_index={props.comment_index} post_index={props.post_index} />}\r\n\r\n            {props.comment.answers.length > 0 && <button \r\n                className=\"btn btn-outline-warning bg-white text-warning border border-warning show-answers\" \r\n                onClick={() => setShowAnswers(!showAnswers)}\r\n            >\r\n                {!showAnswers ? \"Show Answers +\" : \"Hide Answers -\"}\r\n            </button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\post\\answer\\Answers.tsx",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\post\\answer\\Answer.tsx",["168"],"import React, { useEffect, useState } from 'react'\r\nimport { Answer as AnswerObj } from '../../../interfaces/post'\r\nimport Moment from 'react-moment'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { State } from '../../../interfaces';\r\nimport { likeAnswer, removeAnswer, unlikeAnswer, updateAnswer } from '../../../actions/postActions';\r\n\r\nconst Answer = (props: {answer: AnswerObj, post_index: number, comment_index: number}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {user} = useSelector((state: State) => state.user)\r\n    const {profile} = useSelector((state: State) => state.profile)\r\n    const {answersLiked, canClickLikeButton} = useSelector((state: State) => state.post)\r\n\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [answerText, setAnswerText] = useState(props.answer.answer_text);\r\n    const [edit, setEdit] = useState(false)\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setIsLiked(answersLiked.findIndex(a => a.answer_id === props.answer.id) !== -1 ? true : false)\r\n    }, [answersLiked])\r\n\r\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        let answer = {...props.answer};\r\n        answer.answer_text = answerText;\r\n\r\n        dispatch(updateAnswer(user.id, profile.id, answer, props.post_index, props.comment_index));\r\n\r\n        setEdit(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-body answer\">\r\n            {props.answer.profile_id === profile.id && <span className=\"options-button\" onClick={() => setShowOptions(!showOptions)}>\r\n                <i className=\"fas fa-ellipsis-h\"></i>\r\n            </span>}\r\n\r\n            {showOptions && <ul className=\"options shadow card\">\r\n                <li onClick={() => {\r\n                    setEdit(true);\r\n                    setShowOptions(false);\r\n                }}>Edit <i className=\"fas fa-edit\"></i></li>\r\n                <li onClick={() => {\r\n                        dispatch(removeAnswer(user.id, profile.id, props.answer.id, props.post_index, props.comment_index))\r\n                        setShowOptions(false);\r\n                    }\r\n                }>Delete <i className=\"fas fa-trash-alt\"></i></li>\r\n            </ul>}\r\n\r\n            <div className=\"posted-by\">\r\n                <img src=\"/assets/user.png\" className=\"img-fluid\" alt=\"Default User\"/> {props.answer.username} \r\n                <span className=\"time-posted\"><Moment format=\"D MMMM YYYY hh:mm\">{props.answer.created_at}</Moment></span>\r\n            </div>\r\n\r\n            {!edit && <p className=\"card-text\">\r\n                {props.answer.answer_text}\r\n            </p>}\r\n\r\n            {edit && \r\n                <form className=\"clearfix update-form\" onSubmit={onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            rows={4}\r\n                            value={answerText} \r\n                            onChange={e => setAnswerText(e.target.value)}\r\n                            required\r\n                        >\r\n                        </textarea>\r\n\r\n                        <div className=\"buttons float-end\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setEdit(false)}>Cancel</button>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            }\r\n\r\n            <div className=\"post-icons\">\r\n                <span>\r\n                    <span\r\n                        style={isLiked ? {color: 'var(--bs-primary)'} : {}} \r\n                        onClick={() => {\r\n                            if(!canClickLikeButton){\r\n                                return;\r\n                            }\r\n\r\n                            if(!isLiked){\r\n                                dispatch(likeAnswer(user.id, profile.id, props.answer.id, props.post_index, props.comment_index));\r\n                                setIsLiked(true);\r\n                            }else{\r\n                                dispatch(unlikeAnswer(user.id, profile.id, props.answer.id, props.post_index, props.comment_index));\r\n                                setIsLiked(false);\r\n                            }\r\n                        }}\r\n                    >\r\n                        <i className=\"fas fa-thumbs-up\"></i> Like\r\n                    </span> \r\n                    <span className=\"badge bg-primary\">{props.answer.likes}</span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Answer\r\n","C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\modals\\CreatePost.tsx",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\reducers\\profileReducer.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actionTypes\\profileActionTypes.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actions\\profileActions.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\reducers\\postReducer.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actionTypes\\postActionTypes.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\actions\\postActions.ts",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\modals\\CreateComment.tsx",[],"C:\\Users\\Windows\\Desktop\\Youtube Tutorials\\Social Media App\\client\\src\\components\\modals\\CreateAnswer.tsx",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":15,"column":6,"nodeType":"175","endLine":15,"endColumn":8,"suggestions":"176"},{"ruleId":"169","replacedBy":"177"},{"ruleId":"171","replacedBy":"178"},{"ruleId":"173","severity":1,"message":"179","line":18,"column":8,"nodeType":"175","endLine":18,"endColumn":25,"suggestions":"180"},{"ruleId":"173","severity":1,"message":"174","line":22,"column":8,"nodeType":"175","endLine":22,"endColumn":10,"suggestions":"181"},{"ruleId":"173","severity":1,"message":"182","line":32,"column":8,"nodeType":"175","endLine":32,"endColumn":27,"suggestions":"183"},{"ruleId":"173","severity":1,"message":"184","line":26,"column":8,"nodeType":"175","endLine":26,"endColumn":20,"suggestions":"185"},{"ruleId":"173","severity":1,"message":"186","line":26,"column":8,"nodeType":"175","endLine":26,"endColumn":23,"suggestions":"187"},{"ruleId":"173","severity":1,"message":"188","line":22,"column":8,"nodeType":"175","endLine":22,"endColumn":22,"suggestions":"189"},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["192"],["190"],["191"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["193"],["194"],"React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'props.post.id'. Either include it or remove the dependency array. If 'setIsLiked' needs the current value of 'props.post.id', you can also switch to useReducer instead of useState and read 'props.post.id' in the reducer.",["196"],"React Hook useEffect has a missing dependency: 'props.comment.id'. Either include it or remove the dependency array. If 'setIsLiked' needs the current value of 'props.comment.id', you can also switch to useReducer instead of useState and read 'props.comment.id' in the reducer.",["197"],"React Hook useEffect has a missing dependency: 'props.answer.id'. Either include it or remove the dependency array. If 'setIsLiked' needs the current value of 'props.answer.id', you can also switch to useReducer instead of useState and read 'props.answer.id' in the reducer.",["198"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"199","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [dispatch, user.id]",{"range":"212","text":"213"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"214","text":"215"},{"range":"216","text":"213"},"Update the dependencies array to be: [profile, dispatch, user.id]",{"range":"217","text":"218"},"Update the dependencies array to be: [postsLiked, props.post.id]",{"range":"219","text":"220"},"Update the dependencies array to be: [commentsLiked, props.comment.id]",{"range":"221","text":"222"},"Update the dependencies array to be: [answersLiked, props.answer.id]",{"range":"223","text":"224"},[495,497],"[dispatch, user.id]",[598,615],"[history, isAuthenticated]",[954,956],[1327,1346],"[profile, dispatch, user.id]",[1277,1289],"[postsLiked, props.post.id]",[1384,1399],"[commentsLiked, props.comment.id]",[1086,1100],"[answersLiked, props.answer.id]"]